name: Build on Alpine (static lib)

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      release:
        type: boolean
        
permissions:
      contents: read
      
jobs:
  build_on_debian_static:
    permissions:
      contents: write
    name: Build on Alpine (static lib)
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
      - name: Ensure git safe directory
        run: |
          git config --global --add safe.directory $(pwd)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0
      - name: Build WasmEdge
        uses: docker/bake-action@849707117b03d39aba7924c50a10376a69e88d7d # v4.1.0
        with:
          files: ./utils/docker/docker-bake.alpine-static.hcl
      - name: Upload artifact
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: static-libs
          path: ./build/*/WasmEdge-*.tar.gz
      - name: Upload package tarball
        if: ${{ inputs.release }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          type -p curl >/dev/null || (apt update && apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && apt update \
          && apt install gh -y
          gh release upload ${{ inputs.version }} ./build/*/WasmEdge-*.tar.gz --clobber
